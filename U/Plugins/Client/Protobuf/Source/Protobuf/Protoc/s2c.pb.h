// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: s2c.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_s2c_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_s2c_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "enum.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_s2c_2eproto PROTOBUF_API
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct PROTOBUF_API TableStruct_s2c_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern PROTOBUF_API const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_s2c_2eproto;
class FLoginRet;
class FLoginRetDefaultTypeInternal;
PROTOBUF_API extern FLoginRetDefaultTypeInternal _FLoginRet_default_instance_;
class FPingRet;
class FPingRetDefaultTypeInternal;
PROTOBUF_API extern FPingRetDefaultTypeInternal _FPingRet_default_instance_;
class ResDisconnectInfo;
class ResDisconnectInfoDefaultTypeInternal;
PROTOBUF_API extern ResDisconnectInfoDefaultTypeInternal _ResDisconnectInfo_default_instance_;
class ResLogin;
class ResLoginDefaultTypeInternal;
PROTOBUF_API extern ResLoginDefaultTypeInternal _ResLogin_default_instance_;
class ResLoginInfo;
class ResLoginInfoDefaultTypeInternal;
PROTOBUF_API extern ResLoginInfoDefaultTypeInternal _ResLoginInfo_default_instance_;
class ResOtherLogin;
class ResOtherLoginDefaultTypeInternal;
PROTOBUF_API extern ResOtherLoginDefaultTypeInternal _ResOtherLogin_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_API ::FLoginRet* Arena::CreateMaybeMessage<::FLoginRet>(Arena*);
template<> PROTOBUF_API ::FPingRet* Arena::CreateMaybeMessage<::FPingRet>(Arena*);
template<> PROTOBUF_API ::ResDisconnectInfo* Arena::CreateMaybeMessage<::ResDisconnectInfo>(Arena*);
template<> PROTOBUF_API ::ResLogin* Arena::CreateMaybeMessage<::ResLogin>(Arena*);
template<> PROTOBUF_API ::ResLoginInfo* Arena::CreateMaybeMessage<::ResLoginInfo>(Arena*);
template<> PROTOBUF_API ::ResOtherLogin* Arena::CreateMaybeMessage<::ResOtherLogin>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class PROTOBUF_API FPingRet :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:FPingRet) */ {
 public:
  FPingRet();
  virtual ~FPingRet();

  FPingRet(const FPingRet& from);
  FPingRet(FPingRet&& from) noexcept
    : FPingRet() {
    *this = ::std::move(from);
  }

  inline FPingRet& operator=(const FPingRet& from) {
    CopyFrom(from);
    return *this;
  }
  inline FPingRet& operator=(FPingRet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FPingRet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FPingRet* internal_default_instance() {
    return reinterpret_cast<const FPingRet*>(
               &_FPingRet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(FPingRet* other);
  friend void swap(FPingRet& a, FPingRet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FPingRet* New() const final {
    return CreateMaybeMessage<FPingRet>(nullptr);
  }

  FPingRet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FPingRet>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FPingRet& from);
  void MergeFrom(const FPingRet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FPingRet* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "FPingRet";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_s2c_2eproto);
    return ::descriptor_table_s2c_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 stime = 1;
  void clear_stime();
  static const int kStimeFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 stime() const;
  void set_stime(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:FPingRet)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 stime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_s2c_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_API FLoginRet :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:FLoginRet) */ {
 public:
  FLoginRet();
  virtual ~FLoginRet();

  FLoginRet(const FLoginRet& from);
  FLoginRet(FLoginRet&& from) noexcept
    : FLoginRet() {
    *this = ::std::move(from);
  }

  inline FLoginRet& operator=(const FLoginRet& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLoginRet& operator=(FLoginRet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLoginRet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLoginRet* internal_default_instance() {
    return reinterpret_cast<const FLoginRet*>(
               &_FLoginRet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(FLoginRet* other);
  friend void swap(FLoginRet& a, FLoginRet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FLoginRet* New() const final {
    return CreateMaybeMessage<FLoginRet>(nullptr);
  }

  FLoginRet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLoginRet>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLoginRet& from);
  void MergeFrom(const FLoginRet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLoginRet* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "FLoginRet";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_s2c_2eproto);
    return ::descriptor_table_s2c_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 Result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int64 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:FLoginRet)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int64 result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_s2c_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_API ResLogin :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ResLogin) */ {
 public:
  ResLogin();
  virtual ~ResLogin();

  ResLogin(const ResLogin& from);
  ResLogin(ResLogin&& from) noexcept
    : ResLogin() {
    *this = ::std::move(from);
  }

  inline ResLogin& operator=(const ResLogin& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResLogin& operator=(ResLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ResLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResLogin* internal_default_instance() {
    return reinterpret_cast<const ResLogin*>(
               &_ResLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ResLogin* other);
  friend void swap(ResLogin& a, ResLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResLogin* New() const final {
    return CreateMaybeMessage<ResLogin>(nullptr);
  }

  ResLogin* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResLogin>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResLogin& from);
  void MergeFrom(const ResLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResLogin* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ResLogin";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_s2c_2eproto);
    return ::descriptor_table_s2c_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 userId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int64 userid() const;
  void set_userid(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:ResLogin)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int64 userid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_s2c_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_API ResOtherLogin :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ResOtherLogin) */ {
 public:
  ResOtherLogin();
  virtual ~ResOtherLogin();

  ResOtherLogin(const ResOtherLogin& from);
  ResOtherLogin(ResOtherLogin&& from) noexcept
    : ResOtherLogin() {
    *this = ::std::move(from);
  }

  inline ResOtherLogin& operator=(const ResOtherLogin& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResOtherLogin& operator=(ResOtherLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ResOtherLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResOtherLogin* internal_default_instance() {
    return reinterpret_cast<const ResOtherLogin*>(
               &_ResOtherLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ResOtherLogin* other);
  friend void swap(ResOtherLogin& a, ResOtherLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResOtherLogin* New() const final {
    return CreateMaybeMessage<ResOtherLogin>(nullptr);
  }

  ResOtherLogin* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResOtherLogin>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResOtherLogin& from);
  void MergeFrom(const ResOtherLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResOtherLogin* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ResOtherLogin";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_s2c_2eproto);
    return ::descriptor_table_s2c_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 userId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int64 userid() const;
  void set_userid(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:ResOtherLogin)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int64 userid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_s2c_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_API ResLoginInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ResLoginInfo) */ {
 public:
  ResLoginInfo();
  virtual ~ResLoginInfo();

  ResLoginInfo(const ResLoginInfo& from);
  ResLoginInfo(ResLoginInfo&& from) noexcept
    : ResLoginInfo() {
    *this = ::std::move(from);
  }

  inline ResLoginInfo& operator=(const ResLoginInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResLoginInfo& operator=(ResLoginInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ResLoginInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResLoginInfo* internal_default_instance() {
    return reinterpret_cast<const ResLoginInfo*>(
               &_ResLoginInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ResLoginInfo* other);
  friend void swap(ResLoginInfo& a, ResLoginInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResLoginInfo* New() const final {
    return CreateMaybeMessage<ResLoginInfo>(nullptr);
  }

  ResLoginInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResLoginInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResLoginInfo& from);
  void MergeFrom(const ResLoginInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResLoginInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ResLoginInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_s2c_2eproto);
    return ::descriptor_table_s2c_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 userId = 1;
  int userid_size() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int64 userid(int index) const;
  void set_userid(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_userid(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      userid() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_userid();

  // @@protoc_insertion_point(class_scope:ResLoginInfo)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > userid_;
  mutable std::atomic<int> _userid_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_s2c_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_API ResDisconnectInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ResDisconnectInfo) */ {
 public:
  ResDisconnectInfo();
  virtual ~ResDisconnectInfo();

  ResDisconnectInfo(const ResDisconnectInfo& from);
  ResDisconnectInfo(ResDisconnectInfo&& from) noexcept
    : ResDisconnectInfo() {
    *this = ::std::move(from);
  }

  inline ResDisconnectInfo& operator=(const ResDisconnectInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResDisconnectInfo& operator=(ResDisconnectInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ResDisconnectInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResDisconnectInfo* internal_default_instance() {
    return reinterpret_cast<const ResDisconnectInfo*>(
               &_ResDisconnectInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ResDisconnectInfo* other);
  friend void swap(ResDisconnectInfo& a, ResDisconnectInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResDisconnectInfo* New() const final {
    return CreateMaybeMessage<ResDisconnectInfo>(nullptr);
  }

  ResDisconnectInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResDisconnectInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResDisconnectInfo& from);
  void MergeFrom(const ResDisconnectInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResDisconnectInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ResDisconnectInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_s2c_2eproto);
    return ::descriptor_table_s2c_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 userId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int64 userid() const;
  void set_userid(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:ResDisconnectInfo)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int64 userid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_s2c_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FPingRet

// int32 stime = 1;
inline void FPingRet::clear_stime() {
  stime_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FPingRet::stime() const {
  // @@protoc_insertion_point(field_get:FPingRet.stime)
  return stime_;
}
inline void FPingRet::set_stime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  stime_ = value;
  // @@protoc_insertion_point(field_set:FPingRet.stime)
}

// -------------------------------------------------------------------

// FLoginRet

// int64 Result = 1;
inline void FLoginRet::clear_result() {
  result_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 FLoginRet::result() const {
  // @@protoc_insertion_point(field_get:FLoginRet.Result)
  return result_;
}
inline void FLoginRet::set_result(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:FLoginRet.Result)
}

// -------------------------------------------------------------------

// ResLogin

// int64 userId = 1;
inline void ResLogin::clear_userid() {
  userid_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ResLogin::userid() const {
  // @@protoc_insertion_point(field_get:ResLogin.userId)
  return userid_;
}
inline void ResLogin::set_userid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:ResLogin.userId)
}

// -------------------------------------------------------------------

// ResOtherLogin

// int64 userId = 1;
inline void ResOtherLogin::clear_userid() {
  userid_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ResOtherLogin::userid() const {
  // @@protoc_insertion_point(field_get:ResOtherLogin.userId)
  return userid_;
}
inline void ResOtherLogin::set_userid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:ResOtherLogin.userId)
}

// -------------------------------------------------------------------

// ResLoginInfo

// repeated int64 userId = 1;
inline int ResLoginInfo::userid_size() const {
  return userid_.size();
}
inline void ResLoginInfo::clear_userid() {
  userid_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ResLoginInfo::userid(int index) const {
  // @@protoc_insertion_point(field_get:ResLoginInfo.userId)
  return userid_.Get(index);
}
inline void ResLoginInfo::set_userid(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  userid_.Set(index, value);
  // @@protoc_insertion_point(field_set:ResLoginInfo.userId)
}
inline void ResLoginInfo::add_userid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  userid_.Add(value);
  // @@protoc_insertion_point(field_add:ResLoginInfo.userId)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
ResLoginInfo::userid() const {
  // @@protoc_insertion_point(field_list:ResLoginInfo.userId)
  return userid_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
ResLoginInfo::mutable_userid() {
  // @@protoc_insertion_point(field_mutable_list:ResLoginInfo.userId)
  return &userid_;
}

// -------------------------------------------------------------------

// ResDisconnectInfo

// int64 userId = 1;
inline void ResDisconnectInfo::clear_userid() {
  userid_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ResDisconnectInfo::userid() const {
  // @@protoc_insertion_point(field_get:ResDisconnectInfo.userId)
  return userid_;
}
inline void ResDisconnectInfo::set_userid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:ResDisconnectInfo.userId)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_s2c_2eproto
