// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_test_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_test_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_test_2eproto PROTOBUF_API
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct PROTOBUF_API TableStruct_test_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern PROTOBUF_API const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_test_2eproto;
namespace test {
class ComboEnd;
class ComboEndDefaultTypeInternal;
PROTOBUF_API extern ComboEndDefaultTypeInternal _ComboEnd_default_instance_;
class ComboNode;
class ComboNodeDefaultTypeInternal;
PROTOBUF_API extern ComboNodeDefaultTypeInternal _ComboNode_default_instance_;
class ComboPostionDif;
class ComboPostionDifDefaultTypeInternal;
PROTOBUF_API extern ComboPostionDifDefaultTypeInternal _ComboPostionDif_default_instance_;
class ReqUpdateView;
class ReqUpdateViewDefaultTypeInternal;
PROTOBUF_API extern ReqUpdateViewDefaultTypeInternal _ReqUpdateView_default_instance_;
class RoleInfo;
class RoleInfoDefaultTypeInternal;
PROTOBUF_API extern RoleInfoDefaultTypeInternal _RoleInfo_default_instance_;
class RotateYaw;
class RotateYawDefaultTypeInternal;
PROTOBUF_API extern RotateYawDefaultTypeInternal _RotateYaw_default_instance_;
}  // namespace test
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_API ::test::ComboEnd* Arena::CreateMaybeMessage<::test::ComboEnd>(Arena*);
template<> PROTOBUF_API ::test::ComboNode* Arena::CreateMaybeMessage<::test::ComboNode>(Arena*);
template<> PROTOBUF_API ::test::ComboPostionDif* Arena::CreateMaybeMessage<::test::ComboPostionDif>(Arena*);
template<> PROTOBUF_API ::test::ReqUpdateView* Arena::CreateMaybeMessage<::test::ReqUpdateView>(Arena*);
template<> PROTOBUF_API ::test::RoleInfo* Arena::CreateMaybeMessage<::test::RoleInfo>(Arena*);
template<> PROTOBUF_API ::test::RotateYaw* Arena::CreateMaybeMessage<::test::RotateYaw>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace test {

// ===================================================================

class PROTOBUF_API ComboNode :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:test.ComboNode) */ {
 public:
  ComboNode();
  virtual ~ComboNode();

  ComboNode(const ComboNode& from);
  ComboNode(ComboNode&& from) noexcept
    : ComboNode() {
    *this = ::std::move(from);
  }

  inline ComboNode& operator=(const ComboNode& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComboNode& operator=(ComboNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ComboNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComboNode* internal_default_instance() {
    return reinterpret_cast<const ComboNode*>(
               &_ComboNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ComboNode* other);
  friend void swap(ComboNode& a, ComboNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComboNode* New() const final {
    return CreateMaybeMessage<ComboNode>(nullptr);
  }

  ComboNode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ComboNode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ComboNode& from);
  void MergeFrom(const ComboNode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComboNode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "test.ComboNode";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_test_2eproto);
    return ::descriptor_table_test_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 userId = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int64 userid() const;
  void set_userid(::PROTOBUF_NAMESPACE_ID::int64 value);

  // required int32 comboNode = 1;
  bool has_combonode() const;
  void clear_combonode();
  static const int kComboNodeFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 combonode() const;
  void set_combonode(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 x = 4;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::int32 x() const;
  void set_x(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 yaw = 3;
  bool has_yaw() const;
  void clear_yaw();
  static const int kYawFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int64 yaw() const;
  void set_yaw(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 y = 5;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 5;
  ::PROTOBUF_NAMESPACE_ID::int32 y() const;
  void set_y(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 z = 6;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 6;
  ::PROTOBUF_NAMESPACE_ID::int32 z() const;
  void set_z(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 rockerX = 7;
  bool has_rockerx() const;
  void clear_rockerx();
  static const int kRockerXFieldNumber = 7;
  ::PROTOBUF_NAMESPACE_ID::int32 rockerx() const;
  void set_rockerx(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 rockerY = 8;
  bool has_rockery() const;
  void clear_rockery();
  static const int kRockerYFieldNumber = 8;
  ::PROTOBUF_NAMESPACE_ID::int32 rockery() const;
  void set_rockery(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 controllerPitch = 9;
  bool has_controllerpitch() const;
  void clear_controllerpitch();
  static const int kControllerPitchFieldNumber = 9;
  ::PROTOBUF_NAMESPACE_ID::int32 controllerpitch() const;
  void set_controllerpitch(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 controllerYaw = 10;
  bool has_controlleryaw() const;
  void clear_controlleryaw();
  static const int kControllerYawFieldNumber = 10;
  ::PROTOBUF_NAMESPACE_ID::int32 controlleryaw() const;
  void set_controlleryaw(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 controllerRoll = 11;
  bool has_controllerroll() const;
  void clear_controllerroll();
  static const int kControllerRollFieldNumber = 11;
  ::PROTOBUF_NAMESPACE_ID::int32 controllerroll() const;
  void set_controllerroll(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:test.ComboNode)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 userid_;
  ::PROTOBUF_NAMESPACE_ID::int32 combonode_;
  ::PROTOBUF_NAMESPACE_ID::int32 x_;
  ::PROTOBUF_NAMESPACE_ID::int64 yaw_;
  ::PROTOBUF_NAMESPACE_ID::int32 y_;
  ::PROTOBUF_NAMESPACE_ID::int32 z_;
  ::PROTOBUF_NAMESPACE_ID::int32 rockerx_;
  ::PROTOBUF_NAMESPACE_ID::int32 rockery_;
  ::PROTOBUF_NAMESPACE_ID::int32 controllerpitch_;
  ::PROTOBUF_NAMESPACE_ID::int32 controlleryaw_;
  ::PROTOBUF_NAMESPACE_ID::int32 controllerroll_;
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_API ComboPostionDif :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:test.ComboPostionDif) */ {
 public:
  ComboPostionDif();
  virtual ~ComboPostionDif();

  ComboPostionDif(const ComboPostionDif& from);
  ComboPostionDif(ComboPostionDif&& from) noexcept
    : ComboPostionDif() {
    *this = ::std::move(from);
  }

  inline ComboPostionDif& operator=(const ComboPostionDif& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComboPostionDif& operator=(ComboPostionDif&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ComboPostionDif& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComboPostionDif* internal_default_instance() {
    return reinterpret_cast<const ComboPostionDif*>(
               &_ComboPostionDif_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ComboPostionDif* other);
  friend void swap(ComboPostionDif& a, ComboPostionDif& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComboPostionDif* New() const final {
    return CreateMaybeMessage<ComboPostionDif>(nullptr);
  }

  ComboPostionDif* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ComboPostionDif>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ComboPostionDif& from);
  void MergeFrom(const ComboPostionDif& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComboPostionDif* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "test.ComboPostionDif";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_test_2eproto);
    return ::descriptor_table_test_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 x() const;
  void set_x(::PROTOBUF_NAMESPACE_ID::int32 value);

  // required int32 y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 y() const;
  void set_y(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 userId = 4;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::int64 userid() const;
  void set_userid(::PROTOBUF_NAMESPACE_ID::int64 value);

  // required int32 z = 3;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 z() const;
  void set_z(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:test.ComboPostionDif)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 x_;
  ::PROTOBUF_NAMESPACE_ID::int32 y_;
  ::PROTOBUF_NAMESPACE_ID::int64 userid_;
  ::PROTOBUF_NAMESPACE_ID::int32 z_;
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_API ComboEnd :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:test.ComboEnd) */ {
 public:
  ComboEnd();
  virtual ~ComboEnd();

  ComboEnd(const ComboEnd& from);
  ComboEnd(ComboEnd&& from) noexcept
    : ComboEnd() {
    *this = ::std::move(from);
  }

  inline ComboEnd& operator=(const ComboEnd& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComboEnd& operator=(ComboEnd&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ComboEnd& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComboEnd* internal_default_instance() {
    return reinterpret_cast<const ComboEnd*>(
               &_ComboEnd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ComboEnd* other);
  friend void swap(ComboEnd& a, ComboEnd& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComboEnd* New() const final {
    return CreateMaybeMessage<ComboEnd>(nullptr);
  }

  ComboEnd* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ComboEnd>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ComboEnd& from);
  void MergeFrom(const ComboEnd& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComboEnd* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "test.ComboEnd";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_test_2eproto);
    return ::descriptor_table_test_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 userid() const;
  void set_userid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 x() const;
  void set_x(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 y() const;
  void set_y(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 z = 4;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::int32 z() const;
  void set_z(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:test.ComboEnd)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 userid_;
  ::PROTOBUF_NAMESPACE_ID::int32 x_;
  ::PROTOBUF_NAMESPACE_ID::int32 y_;
  ::PROTOBUF_NAMESPACE_ID::int32 z_;
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_API RotateYaw :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:test.RotateYaw) */ {
 public:
  RotateYaw();
  virtual ~RotateYaw();

  RotateYaw(const RotateYaw& from);
  RotateYaw(RotateYaw&& from) noexcept
    : RotateYaw() {
    *this = ::std::move(from);
  }

  inline RotateYaw& operator=(const RotateYaw& from) {
    CopyFrom(from);
    return *this;
  }
  inline RotateYaw& operator=(RotateYaw&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RotateYaw& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RotateYaw* internal_default_instance() {
    return reinterpret_cast<const RotateYaw*>(
               &_RotateYaw_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(RotateYaw* other);
  friend void swap(RotateYaw& a, RotateYaw& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RotateYaw* New() const final {
    return CreateMaybeMessage<RotateYaw>(nullptr);
  }

  RotateYaw* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RotateYaw>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RotateYaw& from);
  void MergeFrom(const RotateYaw& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RotateYaw* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "test.RotateYaw";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_test_2eproto);
    return ::descriptor_table_test_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 useId = 1;
  bool has_useid() const;
  void clear_useid();
  static const int kUseIdFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int64 useid() const;
  void set_useid(::PROTOBUF_NAMESPACE_ID::int64 value);

  // required int32 yaw = 2;
  bool has_yaw() const;
  void clear_yaw();
  static const int kYawFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 yaw() const;
  void set_yaw(::PROTOBUF_NAMESPACE_ID::int32 value);

  // required int32 time = 3;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 time() const;
  void set_time(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:test.RotateYaw)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 useid_;
  ::PROTOBUF_NAMESPACE_ID::int32 yaw_;
  ::PROTOBUF_NAMESPACE_ID::int32 time_;
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_API ReqUpdateView :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:test.ReqUpdateView) */ {
 public:
  ReqUpdateView();
  virtual ~ReqUpdateView();

  ReqUpdateView(const ReqUpdateView& from);
  ReqUpdateView(ReqUpdateView&& from) noexcept
    : ReqUpdateView() {
    *this = ::std::move(from);
  }

  inline ReqUpdateView& operator=(const ReqUpdateView& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReqUpdateView& operator=(ReqUpdateView&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ReqUpdateView& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqUpdateView* internal_default_instance() {
    return reinterpret_cast<const ReqUpdateView*>(
               &_ReqUpdateView_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ReqUpdateView* other);
  friend void swap(ReqUpdateView& a, ReqUpdateView& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqUpdateView* New() const final {
    return CreateMaybeMessage<ReqUpdateView>(nullptr);
  }

  ReqUpdateView* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ReqUpdateView>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ReqUpdateView& from);
  void MergeFrom(const ReqUpdateView& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqUpdateView* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "test.ReqUpdateView";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_test_2eproto);
    return ::descriptor_table_test_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:test.ReqUpdateView)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class PROTOBUF_API RoleInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:test.RoleInfo) */ {
 public:
  RoleInfo();
  virtual ~RoleInfo();

  RoleInfo(const RoleInfo& from);
  RoleInfo(RoleInfo&& from) noexcept
    : RoleInfo() {
    *this = ::std::move(from);
  }

  inline RoleInfo& operator=(const RoleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoleInfo& operator=(RoleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RoleInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleInfo* internal_default_instance() {
    return reinterpret_cast<const RoleInfo*>(
               &_RoleInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(RoleInfo* other);
  friend void swap(RoleInfo& a, RoleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleInfo* New() const final {
    return CreateMaybeMessage<RoleInfo>(nullptr);
  }

  RoleInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RoleInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RoleInfo& from);
  void MergeFrom(const RoleInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoleInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "test.RoleInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_test_2eproto);
    return ::descriptor_table_test_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 rid = 1;
  bool has_rid() const;
  void clear_rid();
  static const int kRidFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int64 rid() const;
  void set_rid(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:test.RoleInfo)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 rid_;
  friend struct ::TableStruct_test_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ComboNode

// required int32 comboNode = 1;
inline bool ComboNode::has_combonode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComboNode::clear_combonode() {
  combonode_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ComboNode::combonode() const {
  // @@protoc_insertion_point(field_get:test.ComboNode.comboNode)
  return combonode_;
}
inline void ComboNode::set_combonode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  combonode_ = value;
  // @@protoc_insertion_point(field_set:test.ComboNode.comboNode)
}

// optional int64 userId = 2;
inline bool ComboNode::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComboNode::clear_userid() {
  userid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ComboNode::userid() const {
  // @@protoc_insertion_point(field_get:test.ComboNode.userId)
  return userid_;
}
inline void ComboNode::set_userid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:test.ComboNode.userId)
}

// optional int64 yaw = 3;
inline bool ComboNode::has_yaw() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ComboNode::clear_yaw() {
  yaw_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ComboNode::yaw() const {
  // @@protoc_insertion_point(field_get:test.ComboNode.yaw)
  return yaw_;
}
inline void ComboNode::set_yaw(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  yaw_ = value;
  // @@protoc_insertion_point(field_set:test.ComboNode.yaw)
}

// optional int32 x = 4;
inline bool ComboNode::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ComboNode::clear_x() {
  x_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ComboNode::x() const {
  // @@protoc_insertion_point(field_get:test.ComboNode.x)
  return x_;
}
inline void ComboNode::set_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  x_ = value;
  // @@protoc_insertion_point(field_set:test.ComboNode.x)
}

// optional int32 y = 5;
inline bool ComboNode::has_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ComboNode::clear_y() {
  y_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ComboNode::y() const {
  // @@protoc_insertion_point(field_get:test.ComboNode.y)
  return y_;
}
inline void ComboNode::set_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  y_ = value;
  // @@protoc_insertion_point(field_set:test.ComboNode.y)
}

// optional int32 z = 6;
inline bool ComboNode::has_z() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ComboNode::clear_z() {
  z_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ComboNode::z() const {
  // @@protoc_insertion_point(field_get:test.ComboNode.z)
  return z_;
}
inline void ComboNode::set_z(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  z_ = value;
  // @@protoc_insertion_point(field_set:test.ComboNode.z)
}

// optional int32 rockerX = 7;
inline bool ComboNode::has_rockerx() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ComboNode::clear_rockerx() {
  rockerx_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ComboNode::rockerx() const {
  // @@protoc_insertion_point(field_get:test.ComboNode.rockerX)
  return rockerx_;
}
inline void ComboNode::set_rockerx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  rockerx_ = value;
  // @@protoc_insertion_point(field_set:test.ComboNode.rockerX)
}

// optional int32 rockerY = 8;
inline bool ComboNode::has_rockery() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ComboNode::clear_rockery() {
  rockery_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ComboNode::rockery() const {
  // @@protoc_insertion_point(field_get:test.ComboNode.rockerY)
  return rockery_;
}
inline void ComboNode::set_rockery(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  rockery_ = value;
  // @@protoc_insertion_point(field_set:test.ComboNode.rockerY)
}

// optional int32 controllerPitch = 9;
inline bool ComboNode::has_controllerpitch() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ComboNode::clear_controllerpitch() {
  controllerpitch_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ComboNode::controllerpitch() const {
  // @@protoc_insertion_point(field_get:test.ComboNode.controllerPitch)
  return controllerpitch_;
}
inline void ComboNode::set_controllerpitch(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  controllerpitch_ = value;
  // @@protoc_insertion_point(field_set:test.ComboNode.controllerPitch)
}

// optional int32 controllerYaw = 10;
inline bool ComboNode::has_controlleryaw() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ComboNode::clear_controlleryaw() {
  controlleryaw_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ComboNode::controlleryaw() const {
  // @@protoc_insertion_point(field_get:test.ComboNode.controllerYaw)
  return controlleryaw_;
}
inline void ComboNode::set_controlleryaw(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  controlleryaw_ = value;
  // @@protoc_insertion_point(field_set:test.ComboNode.controllerYaw)
}

// optional int32 controllerRoll = 11;
inline bool ComboNode::has_controllerroll() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ComboNode::clear_controllerroll() {
  controllerroll_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ComboNode::controllerroll() const {
  // @@protoc_insertion_point(field_get:test.ComboNode.controllerRoll)
  return controllerroll_;
}
inline void ComboNode::set_controllerroll(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  controllerroll_ = value;
  // @@protoc_insertion_point(field_set:test.ComboNode.controllerRoll)
}

// -------------------------------------------------------------------

// ComboPostionDif

// required int32 x = 1;
inline bool ComboPostionDif::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComboPostionDif::clear_x() {
  x_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ComboPostionDif::x() const {
  // @@protoc_insertion_point(field_get:test.ComboPostionDif.x)
  return x_;
}
inline void ComboPostionDif::set_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  x_ = value;
  // @@protoc_insertion_point(field_set:test.ComboPostionDif.x)
}

// required int32 y = 2;
inline bool ComboPostionDif::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComboPostionDif::clear_y() {
  y_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ComboPostionDif::y() const {
  // @@protoc_insertion_point(field_get:test.ComboPostionDif.y)
  return y_;
}
inline void ComboPostionDif::set_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  y_ = value;
  // @@protoc_insertion_point(field_set:test.ComboPostionDif.y)
}

// required int32 z = 3;
inline bool ComboPostionDif::has_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ComboPostionDif::clear_z() {
  z_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ComboPostionDif::z() const {
  // @@protoc_insertion_point(field_get:test.ComboPostionDif.z)
  return z_;
}
inline void ComboPostionDif::set_z(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  z_ = value;
  // @@protoc_insertion_point(field_set:test.ComboPostionDif.z)
}

// optional int64 userId = 4;
inline bool ComboPostionDif::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ComboPostionDif::clear_userid() {
  userid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ComboPostionDif::userid() const {
  // @@protoc_insertion_point(field_get:test.ComboPostionDif.userId)
  return userid_;
}
inline void ComboPostionDif::set_userid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:test.ComboPostionDif.userId)
}

// -------------------------------------------------------------------

// ComboEnd

// optional int32 userId = 1;
inline bool ComboEnd::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComboEnd::clear_userid() {
  userid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ComboEnd::userid() const {
  // @@protoc_insertion_point(field_get:test.ComboEnd.userId)
  return userid_;
}
inline void ComboEnd::set_userid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
  // @@protoc_insertion_point(field_set:test.ComboEnd.userId)
}

// optional int32 x = 2;
inline bool ComboEnd::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComboEnd::clear_x() {
  x_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ComboEnd::x() const {
  // @@protoc_insertion_point(field_get:test.ComboEnd.x)
  return x_;
}
inline void ComboEnd::set_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  x_ = value;
  // @@protoc_insertion_point(field_set:test.ComboEnd.x)
}

// optional int32 y = 3;
inline bool ComboEnd::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ComboEnd::clear_y() {
  y_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ComboEnd::y() const {
  // @@protoc_insertion_point(field_get:test.ComboEnd.y)
  return y_;
}
inline void ComboEnd::set_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  y_ = value;
  // @@protoc_insertion_point(field_set:test.ComboEnd.y)
}

// optional int32 z = 4;
inline bool ComboEnd::has_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ComboEnd::clear_z() {
  z_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ComboEnd::z() const {
  // @@protoc_insertion_point(field_get:test.ComboEnd.z)
  return z_;
}
inline void ComboEnd::set_z(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  z_ = value;
  // @@protoc_insertion_point(field_set:test.ComboEnd.z)
}

// -------------------------------------------------------------------

// RotateYaw

// optional int64 useId = 1;
inline bool RotateYaw::has_useid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RotateYaw::clear_useid() {
  useid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RotateYaw::useid() const {
  // @@protoc_insertion_point(field_get:test.RotateYaw.useId)
  return useid_;
}
inline void RotateYaw::set_useid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  useid_ = value;
  // @@protoc_insertion_point(field_set:test.RotateYaw.useId)
}

// required int32 yaw = 2;
inline bool RotateYaw::has_yaw() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RotateYaw::clear_yaw() {
  yaw_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RotateYaw::yaw() const {
  // @@protoc_insertion_point(field_get:test.RotateYaw.yaw)
  return yaw_;
}
inline void RotateYaw::set_yaw(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  yaw_ = value;
  // @@protoc_insertion_point(field_set:test.RotateYaw.yaw)
}

// required int32 time = 3;
inline bool RotateYaw::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RotateYaw::clear_time() {
  time_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RotateYaw::time() const {
  // @@protoc_insertion_point(field_get:test.RotateYaw.time)
  return time_;
}
inline void RotateYaw::set_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  time_ = value;
  // @@protoc_insertion_point(field_set:test.RotateYaw.time)
}

// -------------------------------------------------------------------

// ReqUpdateView

// -------------------------------------------------------------------

// RoleInfo

// required int64 rid = 1;
inline bool RoleInfo::has_rid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleInfo::clear_rid() {
  rid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RoleInfo::rid() const {
  // @@protoc_insertion_point(field_get:test.RoleInfo.rid)
  return rid_;
}
inline void RoleInfo::set_rid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  rid_ = value;
  // @@protoc_insertion_point(field_set:test.RoleInfo.rid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace test

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_test_2eproto
